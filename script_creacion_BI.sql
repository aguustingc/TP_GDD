USE GD1C2021;
GO

-- Eliminacion de objetos preexistentes

IF OBJECT_ID('SPARK.BI_FACT_COMPRA','U') IS NOT NULL
  DROP TABLE SPARK.BI_FACT_COMPRA;

IF OBJECT_ID('SPARK.BI_FACT_VENTA','U') IS NOT NULL
  DROP TABLE SPARK.BI_FACT_VENTA;

IF OBJECT_ID('SPARK.BI_DIM_CLIENTE','U') IS NOT NULL
  DROP TABLE SPARK.BI_DIM_CLIENTE;

IF OBJECT_ID('SPARK.BI_DIM_TIEMPO','U') IS NOT NULL
  DROP TABLE SPARK.BI_DIM_TIEMPO;

IF OBJECT_ID ('SPARK.GetAge', 'FN') IS NOT NULL  
    DROP FUNCTION SPARK.getAge;

IF OBJECT_ID ('SPARK.CrearDimTiempo', 'P') IS NOT NULL  
    DROP PROC SPARK.CrearDimTiempo;

IF OBJECT_ID('SPARK.BI_DIM_SUCURSAL','U') IS NOT NULL
  DROP TABLE SPARK.BI_DIM_SUCURSAL;

IF OBJECT_ID('SPARK.BI_DIM_PRODUCTO','U') IS NOT NULL
  DROP TABLE SPARK.BI_DIM_PRODUCTO;

IF OBJECT_ID('SPARK.BI_DIM_FABRICANTE','U') IS NOT NULL
  DROP TABLE SPARK.BI_DIM_FABRICANTE;

IF OBJECT_ID('SPARK.BI_DIM_PC','U') IS NOT NULL
  DROP TABLE SPARK.BI_DIM_PC;

IF OBJECT_ID('SPARK.BI_DIM_ACCESORIO','U') IS NOT NULL
  DROP TABLE SPARK.BI_DIM_ACCESORIO;

IF OBJECT_ID('SPARK.BI_DIM_MICROPROCESADOR','U') IS NOT NULL
  DROP TABLE SPARK.BI_DIM_MICROPROCESADOR;

IF OBJECT_ID('SPARK.BI_DIM_PLACA_VIDEO','U') IS NOT NULL
  DROP TABLE SPARK.BI_DIM_PLACA_VIDEO;

IF OBJECT_ID('SPARK.BI_DIM_DISCO_RIGIDO','U') IS NOT NULL
  DROP TABLE SPARK.BI_DIM_DISCO_RIGIDO;

IF OBJECT_ID('SPARK.BI_DIM_MEMORIA_RAM','U') IS NOT NULL
  DROP TABLE SPARK.BI_DIM_MEMORIA_RAM;

GO


-- Funciones

CREATE FUNCTION SPARK.GetAge(@Fecha nvarchar(255))
RETURNS decimal(3,0)
AS
BEGIN
	DECLARE @Edad decimal(3,0)
	SELECT @Edad = year(CURRENT_TIMESTAMP) - SUBSTRING(@Fecha, 1, 4)

	RETURN @Edad
END;
GO


-- Stored procedures

CREATE PROCEDURE SPARK.CrearDimTiempo(@AnioInicio int, 
									@AnioFinal int)
AS
BEGIN
DECLARE @Mes INTEGER;

	WHILE (@AnioInicio <= @AnioFinal)
	BEGIN
	SET @Mes = 1;

		WHILE (@Mes <= 12)
		BEGIN
			INSERT INTO SPARK.BI_DIM_TIEMPO(TIEMPO_ANIO, TIEMPO_MES)
				VALUES( 
					@AnioInicio,
					@Mes
					)
			SET @Mes = @Mes + 1;
		END
	SET @AnioInicio = @AnioInicio + 1;
	END
END
GO


-- Creacion de las tablas

CREATE TABLE SPARK.BI_DIM_CLIENTE (
CLIENTE_ID INT PRIMARY KEY,
CLIENTE_DNI DECIMAL(18,0), 
CLIENTE_APELLIDO NVARCHAR(255) NOT NULL, 
CLIENTE_NOMBRE NVARCHAR(255) NOT NULL,  
CLIENTE_EDAD NVARCHAR(255) NOT NULL,
CLIENTE_EDAD_RANGO NVARCHAR(255) NOT NULL);

/*
solucion 2
CREATE TABLE SPARK.BI_DIM_CLIENTE (
CLIENTE_RANGO_EDAD NVARCHAR(255) PRIMARY KEY);
*/

CREATE TABLE SPARK.BI_DIM_TIEMPO (
TIEMPO_ID INT IDENTITY(1,1) PRIMARY KEY,
TIEMPO_FECHA DATE NOT NULL,
TIEMPO_ANIO INT NOT NULL,
TIEMPO_MES INT NOT NULL);

CREATE TABLE SPARK.BI_DIM_SUCURSAL (
SUCURSAL_ID INT PRIMARY KEY,
SUCURSAL_DIR NVARCHAR(255) NOT NULL,
SUCURSAL_MAIL NVARCHAR(255) NOT NULL,
SUCURSAL_TELEFONO DECIMAL(18,0) NOT NULL);

CREATE TABLE SPARK.BI_DIM_DISCO_RIGIDO (
DISCO_ID NVARCHAR(255) PRIMARY KEY,
DISCO_TIPO NVARCHAR(255) NOT NULL,
DISCO_CAPACIDAD NVARCHAR(255) NOT NULL,
DISCO_VELOCIDAD NVARCHAR(255) NOT NULL,
DISCO_FABRICANTE NVARCHAR(255) NOT NULL);

CREATE TABLE SPARK.BI_DIM_MEMORIA_RAM (
MEMORIA_ID NVARCHAR(255) PRIMARY KEY,
MEMORIA_TIPO NVARCHAR(255) NOT NULL,
MEMORIA_CAPACIDAD NVARCHAR(255) NOT NULL,
MEMORIA_VELOCIDAD NVARCHAR(255) NOT NULL,
MEMORIA_FABRICANTE NVARCHAR(255) NOT NULL);

CREATE TABLE SPARK.BI_DIM_MICROPROCESADOR (
MICRO_ID NVARCHAR(255) PRIMARY KEY,
MICRO_CACHE NVARCHAR(255) NOT NULL,
MICRO_CANT_HILOS DECIMAL(18,0) NOT NULL,
MICRO_VELOCIDAD NVARCHAR(255) NOT NULL,
MICRO_FABRICANTE NVARCHAR(255) NOT NULL);

CREATE TABLE SPARK.BI_DIM_PLACA_VIDEO (
PLACA_ID NVARCHAR(50) PRIMARY KEY,
PLACA_MODELO NVARCHAR(50) NOT NULL,
PLACA_VELOCIDAD NVARCHAR(255) NOT NULL,
PLACA_CAPACIDAD NVARCHAR(255) NOT NULL,
PLACA_FABRICANTE NVARCHAR(255) NOT NULL);

CREATE TABLE SPARK.BI_DIM_PC(
PC_ID NVARCHAR(255) PRIMARY KEY,
PC_MICRO NVARCHAR(255) NOT NULL FOREIGN KEY REFERENCES SPARK.BI_DIM_MICROPROCESADOR(MICRO_ID),
PC_PLACA NVARCHAR(50) NOT NULL FOREIGN KEY REFERENCES SPARK.BI_DIM_PLACA_VIDEO(PLACA_ID),
PC_DISCO NVARCHAR(255) NOT NULL FOREIGN KEY REFERENCES SPARK.BI_DIM_DISCO_RIGIDO(DISCO_ID),
PC_MEMORIA NVARCHAR(255) NOT NULL FOREIGN KEY REFERENCES SPARK.BI_DIM_MEMORIA_RAM(MEMORIA_ID),
PC_ALTO DECIMAL(18,2) NOT NULL,
PC_ANCHO DECIMAL(18,2) NOT NULL,
PC_PROFUNDIDAD DECIMAL(18,2) NOT NULL);

CREATE TABLE SPARK.BI_DIM_ACCESORIO(
ACCESORIO_ID NVARCHAR(255) PRIMARY KEY,
ACCESORIO_DESCRIPCION NVARCHAR(255) NOT NULL);

CREATE TABLE SPARK.BI_DIM_PRODUCTO (
PRODUCTO_ID NVARCHAR(255) PRIMARY KEY,
PRODUCTO_PRECIO	DECIMAL(18,2) NOT NULL);

CREATE TABLE SPARK.BI_DIM_FABRICANTE(
FABRICANTE_ID INT IDENTITY(1,1) PRIMARY KEY,
FABRICANTE_NOMBRE NVARCHAR(255) NOT NULL);

CREATE TABLE SPARK.BI_FACT_COMPRA(
COMPRA_PRODUCTO NVARCHAR(255) NOT NULL FOREIGN KEY REFERENCES SPARK.BI_DIM_PRODUCTO(PRODUCTO_ID),
COMPRA_SUCURSAL INT NOT NULL FOREIGN KEY REFERENCES SPARK.BI_DIM_SUCURSAL(SUCURSAL_ID),
COMPRA_TIEMPO INT NOT NULL FOREIGN KEY REFERENCES SPARK.BI_DIM_TIEMPO(TIEMPO_ID),
COMPRA_NUMERO NVARCHAR(255) NOT NULL,
COMPRA_CANTIDAD NVARCHAR(255) NOT NULL,
COMPRA_PRECIO NVARCHAR(255) NOT NULL,
COMPRA_IMPORTE NVARCHAR(255) NOT NULL);

CREATE TABLE SPARK.BI_FACT_VENTA(
VENTA_PRODUCTO NVARCHAR(255) NOT NULL FOREIGN KEY REFERENCES SPARK.BI_DIM_PRODUCTO(PRODUCTO_ID),
VENTA_SUCURSAL INT NOT NULL FOREIGN KEY REFERENCES SPARK.BI_DIM_SUCURSAL(SUCURSAL_ID),
VENTA_CLIENTE INT NOT NULL FOREIGN KEY REFERENCES SPARK.BI_DIM_CLIENTE(CLIENTE_ID),
VENTA_TIEMPO INT NOT NULL FOREIGN KEY REFERENCES SPARK.BI_DIM_TIEMPO(TIEMPO_ID),
VENTA_NUMERO NVARCHAR(255) NOT NULL,
VENTA_CANTIDAD NVARCHAR(255) NOT NULL,
VENTA_PRECIO NVARCHAR(255) NOT NULL,
VENTA_IMPORTE NVARCHAR(255) NOT NULL);

GO


-- Migracion

-- BI_DIM_CLIENTE

INSERT SPARK.BI_DIM_CLIENTE
SELECT CLIENTE_ID, 
		CLIENTE_DNI,
		CLIENTE_APELLIDO,
		CLIENTE_NOMBRE,
		SPARK.GetAge(CLIENTE_FECHA_NACIMIENTO) AS CLIENTE_EDAD,
		CASE 
		WHEN SPARK.GetAge(CLIENTE_FECHA_NACIMIENTO) BETWEEN 18 AND 30 THEN '[18-30]'
		WHEN SPARK.GetAge(CLIENTE_FECHA_NACIMIENTO) BETWEEN 31 AND 50 THEN '[31-50]'
		WHEN SPARK.GetAge(CLIENTE_FECHA_NACIMIENTO) > 50 THEN '>50'
		END AS CLIENTE_EDAD_RANGO
FROM SPARK.CLIENTE

/*
solucion 2
INSERT SPARK.BI_DIM_CLIENTE (CLIENTE_RANGO_EDAD)
VALUES ('[18-30]'),
	   ('[31-50]'),
	   ('[>50]'); 
*/

-- BI_DIM_TIEMPO (SE CREA LA BI_DIM_TIEMPO MEDIANTE UN STORED PROCEDURE PARA AUTOMATIZAR EL INSERT DE FECHAS ANIO Y MES)

INSERT SPARK.BI_DIM_TIEMPO
SELECT CONVERT(DATE, COMPRA_FECHA) AS FECHA,
	   CONVERT(INT, SUBSTRING(COMPRA_FECHA,1,4)) AS ANIO,
	   CONVERT(INT, SUBSTRING(COMPRA_FECHA,6,2)) AS MES
FROM SPARK.COMPRA
UNION
SELECT CONVERT(DATE, FACTURA_FECHA) AS FECHA,
	   CONVERT(INT, SUBSTRING(FACTURA_FECHA,1,4)) AS ANIO,
	   CONVERT(INT, SUBSTRING(FACTURA_FECHA,6,2)) AS MES
FROM SPARK.FACTURA

--EXEC SPARK.CrearDimTiempo 1900, 2025 (ESTABA MAL GENERADA LA DIM DE TIEMPO)

-- BI_DIM_SUCURSAL

INSERT SPARK.BI_DIM_SUCURSAL
SELECT SUCURSAL_ID,
	   SUCURSAL_DIR,
	   SUCURSAL_MAIL,
	   SUCURSAL_TELEFONO
FROM SPARK.SUCURSAL

-- BI_DIM_DISCO_RIGIDO

INSERT SPARK.BI_DIM_DISCO_RIGIDO
SELECT DISCO_ID,
	   DISCO_TIPO,
	   DISCO_CAPACIDAD,
	   DISCO_VELOCIDAD,
	   DISCO_FABRICANTE
FROM SPARK.DISCO_RIGIDO

-- BI_DIM_MEMORIA_RAM

INSERT SPARK.BI_DIM_MEMORIA_RAM
SELECT MEMORIA_ID,
	   MEMORIA_TIPO,
	   MEMORIA_CAPACIDAD,
	   MEMORIA_VELOCIDAD,
	   MEMORIA_FABRICANTE
FROM SPARK.MEMORIA_RAM

-- BI_DIM_MICROPROCESADOR 

INSERT SPARK.BI_DIM_MICROPROCESADOR
SELECT MICRO_ID,
	   MICRO_CACHE,
	   MICRO_CANT_HILOS,
	   MICRO_VELOCIDAD,
	   MICRO_FABRICANTE
FROM SPARK.MICROPROCESADOR

-- BI_DIM_PLACA_VIDEO

INSERT SPARK.BI_DIM_PLACA_VIDEO
SELECT PLACA_ID,
	   PLACA_MODELO,
	   PLACA_VELOCIDAD,
	   PLACA_CAPACIDAD,
	   PLACA_FABRICANTE
FROM SPARK.PLACA_VIDEO

-- BI_DIM_PC

INSERT SPARK.BI_DIM_PC
SELECT PC_ID,
	   PC_MICRO,
	   PC_PLACA,
	   PC_DISCO,
	   PC_MEMORIA,
	   PC_ALTO,
	   PC_ANCHO,
	   PC_PROFUNDIDAD
FROM SPARK.PC

-- BI_DIM_ACCESORIO

INSERT SPARK.BI_DIM_ACCESORIO
SELECT ACCESORIO_ID,
	   ACCESORIO_DESCRIPCION
FROM SPARK.ACCESORIO

-- BI_DIM_PRODUCTO

INSERT SPARK.BI_DIM_PRODUCTO
SELECT PRODUCTO_ID,
	   PRODUCTO_PRECIO
FROM SPARK.PRODUCTO

-- BI_DIM_FABRICANTE

INSERT SPARK.BI_DIM_FABRICANTE
SELECT MEMORIA_FABRICANTE
FROM SPARK.MEMORIA_RAM
UNION
SELECT MICRO_FABRICANTE
FROM SPARK.MICROPROCESADOR
UNION 
SELECT PLACA_FABRICANTE
FROM SPARK.PLACA_VIDEO
UNION 
SELECT DISCO_FABRICANTE
FROM SPARK.DISCO_RIGIDO

-- BI_FACT_COMPRA

INSERT SPARK.BI_FACT_COMPRA
SELECT prod.PRODUCTO_ID, suc.SUCURSAL_ID, tiB.TIEMPO_ID, icomp.ITEM_NUMERO, icomp.ITEM_CANTIDAD, prod.PRODUCTO_PRECIO, (icomp.ITEM_CANTIDAD*prod.PRODUCTO_PRECIO)
FROM SPARK.ITEM_COMPRA icomp INNER JOIN SPARK.COMPRA comp ON (comp.COMPRA_ID = icomp.ITEM_NUMERO)
						     INNER JOIN SPARK.SUCURSAL suc ON (comp.COMPRA_SUCURSAL = suc.SUCURSAL_ID)
						     INNER JOIN SPARK.PRODUCTO prod ON (prod.PRODUCTO_ID = icomp.ITEM_CODIGO)
					         INNER JOIN SPARK.BI_DIM_TIEMPO tiB ON (tiB.TIEMPO_FECHA = CONVERT(DATE, comp.COMPRA_FECHA));

-- BI_FACT_VENTA

INSERT SPARK.BI_FACT_VENTA
SELECT prod.PRODUCTO_ID, suc.SUCURSAL_ID, cli.CLIENTE_ID, ti.TIEMPO_ID, dfac.DETALLE_NUMERO, dfac.DETALLE_CANTIDAD, prod.PRODUCTO_PRECIO, (dfac.DETALLE_CANTIDAD*prod.PRODUCTO_PRECIO)
FROM SPARK.DETALLE_FACTURA dfac INNER JOIN SPARK.FACTURA fac ON (dfac.DETALLE_NUMERO = fac.FACTURA_ID)
							    INNER JOIN SPARK.SUCURSAL suc ON (fac.FACTURA_SUCURSAL = suc.SUCURSAL_ID)
								INNER JOIN SPARK.CLIENTE cli ON (fac.FACTURA_CLIENTE = cli.CLIENTE_ID)
								INNER JOIN SPARK.PRODUCTO prod ON (dfac.DETALLE_CODIGO = prod.PRODUCTO_ID)
								INNER JOIN SPARK.BI_DIM_TIEMPO ti ON (fac.FACTURA_FECHA = CONVERT(DATE, ti.TIEMPO_FECHA));

/*
solucion 2
SELECT prod.PRODUCTO_ID AS PRODUCTO, suc.SUCURSAL_ID AS SUCURSAL, clib.CLIENTE_RANGO_EDAD AS CLIENTE, ti.TIEMPO_ID, dfac.DETALLE_NUMERO AS NUMERO_VENTA, dfac.DETALLE_CANTIDAD AS CANTIDAD, prod.PRODUCTO_PRECIO AS PRECIO, (dfac.DETALLE_CANTIDAD*prod.PRODUCTO_PRECIO) AS IMPORTE
FROM SPARK.DETALLE_FACTURA dfac INNER JOIN SPARK.FACTURA fac ON (dfac.DETALLE_NUMERO = fac.FACTURA_ID)
							    INNER JOIN SPARK.SUCURSAL suc ON (fac.FACTURA_SUCURSAL = suc.SUCURSAL_ID)
								INNER JOIN SPARK.CLIENTE cli ON (fac.FACTURA_CLIENTE = cli.CLIENTE_ID)
								INNER JOIN SPARK.PRODUCTO prod ON (dfac.DETALLE_CODIGO = prod.PRODUCTO_ID)
								INNER JOIN SPARK.BI_DIM_TIEMPO ti ON (fac.FACTURA_FECHA = CONVERT(DATE, ti.TIEMPO_FECHA))
								INNER JOIN SPARK.BI_DIM_CLIENTE cliB ON ((CASE
																			WHEN SPARK.GetAge(cli.CLIENTE_FECHA_NACIMIENTO) BETWEEN 18 AND 30 THEN '[18-30]'
																			WHEN SPARK.GetAge(cli.CLIENTE_FECHA_NACIMIENTO) BETWEEN 31 AND 50 THEN '[31-50]'
																			ELSE '[>50]' END) = cliB.CLIENTE_RANGO_EDAD)
*/

GO